{"version":3,"sources":["pages/Report.js","pages/Error.js","components/ListCFItems.js","components/AddCFItem.js","components/SearchCFItem.js","components/Total.js","pages/Home.js","components/App.js","serviceWorker.js","index.js"],"names":["Report","Component","Error","to","ListCFItems","className","this","props","cfItems","map","item","key","id","onClick","deleteItem","contentEditable","suppressContentEditableWarning","onBlur","e","updateInfo","target","innerText","caseNo","partNo","quantity","unitPrice","totalPrice","netWeightPerPcs","netWeight","grossWeight","partName","hsCode","AddCFItem","state","handleChange","bind","handleAdd","value","name","setState","preventDefault","addItem","alert","formDisplay","toggleForm","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","SearchCFItem","aria-label","searchItems","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","Total","border","style","margin","background","fontWeight","totalQuantity","totalUnitPrice","totalNetWeightPerPcs","totalNetWeight","totalGrossWeight","Home","items","lastIndex","queryText","searchItem","window","confirm","tempItems","without","localStorage","setItem","JSON","stringify","findIndex","order","dir","console","log","getItem","tempItems2","parse","push","tempItem2","nextIndex","filteredItems","sort","a","b","undefined","toLowerCase","filter","eachItem","includes","length","forEach","parseFloat","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8SAEqBA,E,YAEjB,aAAc,uE,sEAMV,OACI,kC,GATwBC,a,QCCrB,SAASC,IACpB,OACI,6BACI,oDACA,kBAAC,IAAD,CAAMC,GAAG,KAAT,gB,mBCHSC,E,YACjB,aAAc,uE,sEAIJ,IAAD,OACL,OACI,yBAAKC,UAAU,mCACVC,KAAKC,MAAMC,QAAQC,KAAI,SAAAC,GAAI,OACxB,yBAAKL,UAAU,0BAA0BM,IAAKD,EAAKE,IACnD,yBAAKP,UAAU,QACb,4BAAQA,UAAU,mCAAmCQ,QAAS,kBAAK,EAAKN,MAAMO,WAAWJ,KACrF,kBAAC,IAAD,QAIN,yBAAKL,UAAU,uBACb,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,WAAWU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,SAAUD,EAAEE,OAAOC,UAAWX,EAAKE,MAAMF,EAAKY,SAK7J,yBAAKjB,UAAU,cACb,0BAAMA,UAAU,cAAhB,aACA,0BAAOU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,SAAUD,EAAEE,OAAOC,UAAWX,EAAKE,MAAMF,EAAKa,QAEvI,6BACA,0BAAMlB,UAAU,cAAhB,cACA,0BAAMU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,SAAUD,EAAEE,OAAOC,UAAWX,EAAKE,MAAMF,EAAKc,UANxI,uEAUE,0BAAMnB,UAAU,cAAhB,gBACA,0BAAMU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,YAAaD,EAAEE,OAAOC,UAAWX,EAAKE,MAAMF,EAAKe,WAX3I,gCAeE,0BAAMpB,UAAU,cAAhB,iBACA,0BAAMU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,aAAcD,EAAEE,OAAOC,UAAWX,EAAKE,MAAMF,EAAKgB,YAG1I,6BACA,0BAAMrB,UAAU,aAAhB,wBACA,0BAAMA,UAAU,YAAYU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,kBAAmBD,EAAEE,OAAOC,UAAWX,EAAKE,MACrJF,EAAKiB,iBAtBZ,gCA0BE,0BAAMtB,UAAU,aAAhB,gBACA,0BAAMA,UAAU,YAAYU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,YAAaD,EAAEE,OAAOC,UAAWX,EAAKkB,aAC/IlB,EAAKkB,WA5BZ,gCAgCE,0BAAMvB,UAAU,aAAhB,kBACA,0BAAMA,UAAU,YAAYU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,cAAeD,EAAEE,OAAOC,UAAWX,EAAKkB,aACjJlB,EAAKmB,cAIZ,6BACE,0BAAMxB,UAAU,cAAhB,eACA,0BAAMU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,WAAYD,EAAEE,OAAOC,UAAWX,EAAKE,MACxHF,EAAKoB,WAGZ,6BACE,0BAAMzB,UAAU,cAAhB,aACA,0BAAMU,iBAAe,EAACC,gCAA8B,EAACC,OAAQ,SAAAC,GAAC,OAAI,EAAKX,MAAMY,WAAW,SAAUD,EAAEE,OAAOC,UAAWX,EAAKE,MACtHF,EAAKqB,mB,GAtEO9B,a,QCDpB+B,E,YAEjB,aAAc,IAAD,8BACT,+CACKC,MAAQ,CACTX,OAAQ,EACRC,OAAQ,GACRO,SAAU,GACVC,OAAQ,GACRP,SAAU,EACVC,UAAW,EACXC,WAAY,EACZC,gBAAiB,EACjBC,UAAW,EACXC,YAAa,GAGjB,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAhBR,E,0EAmBAjB,GACT,IAAME,EAASF,EAAEE,OACXiB,EAAQjB,EAAOiB,MACfC,EAAOlB,EAAOkB,KACpBhC,KAAKiC,SAAL,eACKD,EAAOD,M,gCAINnB,GAGN,GAFAA,EAAEsB,iBAEuB,IAAtBlC,KAAK2B,MAAMX,OAKd,GAAyB,KAAtBhB,KAAK2B,MAAMV,OAKd,GAA2B,KAAxBjB,KAAK2B,MAAMH,SAKd,GAAyB,KAAtBxB,KAAK2B,MAAMF,OAKd,GAA2B,IAAxBzB,KAAK2B,MAAMT,SAKd,GAA4B,IAAzBlB,KAAK2B,MAAMR,UAKd,GAA6B,IAA1BnB,KAAK2B,MAAMP,WAKd,GAAkC,IAA/BpB,KAAK2B,MAAMN,gBAKd,GAA4B,IAAzBrB,KAAK2B,MAAML,UAKd,GAA8B,IAA3BtB,KAAK2B,MAAMJ,YAAd,CAKA,IAAInB,EAAO,CACPY,OAAQhB,KAAK2B,MAAMX,OACnBC,OAAQjB,KAAK2B,MAAMV,OACnBO,SAAUxB,KAAK2B,MAAMH,SACrBC,OAAQzB,KAAK2B,MAAMF,OACnBP,SAAUlB,KAAK2B,MAAMT,SACrBC,UAAWnB,KAAK2B,MAAMR,UACtBC,WAAYpB,KAAK2B,MAAMP,WACvBC,gBAAiBrB,KAAK2B,MAAMN,gBAC5BC,UAAWtB,KAAK2B,MAAML,UACtBC,YAAavB,KAAK2B,MAAMJ,aAG5BvB,KAAKC,MAAMkC,QAAQ/B,GACnBJ,KAAKiC,SAAS,CACVjB,OAAQ,EACRC,OAAQ,GACRO,SAAU,GACVC,OAAQ,GACRP,SAAU,EACVC,UAAW,EACXC,WAAY,EACZC,gBAAiB,EACjBC,UAAW,EACXC,YAAa,SA5Bba,MAAM,qCALNA,MAAM,mCALNA,MAAM,2CALNA,MAAM,oCALNA,MAAM,mCALNA,MAAM,iCALNA,MAAM,gCALNA,MAAM,kCALNA,MAAM,gCALNA,MAAM,6B,+BA8EV,OACI,yBAAKrC,UAAW,0BAAsD,IAA3BC,KAAKC,MAAMoC,YAAwB,GAAK,mBACjF9B,QAASP,KAAKC,MAAMqC,YAClB,yBAAKvC,UAAU,oDACX,kBAAC,IAAD,MADJ,gBAIA,yBAAKA,UAAU,aACjB,0BAAMO,GAAG,UAAUiC,YAAU,EAACC,SAAUxC,KAAK8B,WAC3C,yBAAK/B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,SACRC,UAAQ,GAHV,WAOA,yBAAK3C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,SACLY,YAAY,UACZb,MAAO/B,KAAK2B,MAAMX,OAClB6B,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,SACRC,UAAQ,GAHV,WAOA,yBAAK3C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,SACLY,YAAY,UACZb,MAAO/B,KAAK2B,MAAMV,OAClB4B,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,WACRC,UAAQ,GAHV,aAOA,yBAAK3C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,WACLY,YAAY,YACZb,MAAO/B,KAAK2B,MAAMH,SAClBqB,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,UAFV,WAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,SACLY,YAAY,UACZb,MAAO/B,KAAK2B,MAAMF,OAClBoB,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,YAFV,YAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,WACLY,YAAY,WACZb,MAAO/B,KAAK2B,MAAMT,SAClB2B,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,aAFV,cAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,YACLY,YAAY,aACZb,MAAO/B,KAAK2B,MAAMR,UAClB0B,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,cAFV,eAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,aACLY,YAAY,cACZb,MAAO/B,KAAK2B,MAAMP,WAClByB,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,mBAFV,sBAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,kBACLY,YAAY,qBACZb,MAAO/B,KAAK2B,MAAMN,gBAClBwB,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,aAFV,cAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,YACLY,YAAY,aACZb,MAAO/B,KAAK2B,MAAML,UAClBuB,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,uBACb,2BACEA,UAAU,wCACV0C,QAAQ,eAFV,gBAMA,yBAAK1C,UAAU,aACb,2BACE4C,KAAK,OACL5C,UAAU,eACViC,KAAK,cACLY,YAAY,eACZb,MAAO/B,KAAK2B,MAAMJ,YAClBsB,SAAU7C,KAAK4B,iBAKrB,yBAAK7B,UAAU,4BACb,yBAAKA,UAAU,yBACb,4BACE4C,KAAK,SACL5C,UAAU,mCAFZ,wB,GA5TmBJ,aCDlBmD,E,iLACP,IAAD,OACL,OACI,yBAAK/C,UAAU,uDACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEO,GAAG,cACHqC,KAAK,OACL5C,UAAU,eACVgD,aAAW,kBAAkBF,SAAU,SAAAjC,GAAC,OAAI,EAAKX,MAAM+C,YAAYpC,EAAEE,OAAOiB,UAE9E,yBAAKhC,UAAU,sBACb,4BACE4C,KAAK,SACL5C,UAAU,kCACVkD,cAAY,WACZC,gBAAc,OACdC,gBAAc,SALhB,YAOW,0BAAMpD,UAAU,WAG3B,yBAAKA,UAAU,+CACb,4BAAQA,UACJ,0BACwB,aAAvBC,KAAKC,MAAMmD,QAAyB,SAAW,IAClD7C,QAAS,SAAAK,GAAC,OAAG,EAAKX,MAAMoD,YAAY,WAAY,EAAKpD,MAAMqD,WAAWC,KAAK,KAH7E,aAMA,4BAAQxD,UACJ,0BACwB,WAAvBC,KAAKC,MAAMmD,QAAuB,SAAW,IAChD7C,QAAS,SAAAK,GAAC,OAAG,EAAKX,MAAMoD,YAAY,SAAU,EAAKpD,MAAMqD,WAAWC,KAAK,KAH3E,WAMA,yBAAKC,KAAK,YAAYzD,UAAU,qBAChC,4BAAQA,UACJ,0BACyB,QAAxBC,KAAKC,MAAMqD,SAAqB,SAAW,IAC9C/C,QAAS,SAAAK,GAAC,OAAG,EAAKX,MAAMoD,YAAY,EAAKpD,MAAMmD,QAAS,QAAQG,KAAK,KAHvE,OAMA,4BAAQxD,UACJ,0BACyB,SAAxBC,KAAKC,MAAMqD,SAAsB,SAAW,IAC/C/C,QAAS,SAAAK,GAAC,OAAG,EAAKX,MAAMoD,YAAY,EAAKpD,MAAMmD,QAAS,SAASG,KAAK,KAHxE,iB,GA3CsB5D,aCArB8D,E,YACjB,aAAc,uE,sEAOV,OACI,6BACG,2BAAOC,OAAO,IAAIC,MAAO,CAACC,OAAQ,KAC9B,+BACI,wBAAID,MAAO,CAACE,WAAY,SACpB,8CACA,gDACA,2CACA,yDACA,gDACA,oDAGR,+BACK,wBAAIF,MAAO,CAACG,WAAY,SACpB,4BAAK9D,KAAKC,MAAM8D,eAChB,4BAAK/D,KAAKC,MAAM+D,gBAChB,4BAAKhE,KAAKC,MAAMmB,YAChB,4BAAKpB,KAAKC,MAAMgE,sBAChB,4BAAKjE,KAAKC,MAAMiE,gBAChB,4BAAKlE,KAAKC,MAAMkE,0B,GA5BTxE,a,QCMdyE,E,YAEjB,aAAc,IAAD,8BACT,+CACKzC,MAAQ,CACT0C,MAAO,GACPC,UAAW,EACXjC,aAAa,EACbe,QAAS,WACTE,SAAU,MACViB,UAAW,IAGb,EAAKjC,WAAa,EAAKA,WAAWT,KAAhB,gBAClB,EAAKM,QAAU,EAAKA,QAAQN,KAAb,gBACf,EAAKwB,YAAc,EAAKA,YAAYxB,KAAjB,gBACnB,EAAK2C,WAAa,EAAKA,WAAW3C,KAAhB,gBAClB,EAAKhB,WAAa,EAAKA,WAAWgB,KAAhB,gBAClB,EAAKrB,WAAa,EAAKA,WAAWqB,KAAhB,gBAhBX,E,wEAmBFzB,GAEP,IAAiB,IADDqE,OAAOC,QAAQ,wCAC/B,CAGA,IAAIC,EAAY3E,KAAK2B,MAAM0C,MAC3BM,EAAYC,kBAAQD,EAAWvE,GAC/BJ,KAAKiC,SAAS,CACZoC,MAAOM,IAGTE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,O,iCAGzC3C,EAAMD,EAAOzB,GACtB,IAAIqE,EAAY3E,KAAK2B,MAAM0C,MAEV,OAAdM,IAIDA,EAHgBM,oBAAUN,EAAW,CACnCrE,GAAIA,KAEe0B,GAAQD,EAE7B8C,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAEhD3E,KAAKiC,SAAS,CACZoC,MAAOM,O,kCAQDO,EAAOC,GACjBnF,KAAKiC,SAAS,CACZmB,QAAS8B,EACT5B,SAAU6B,M,iCAIHpD,GACT/B,KAAKiC,SAAS,CACZsC,UAAWxC,M,8BAIP3B,GACNgF,QAAQC,IAAIjF,GACZ,IAAIuE,EAAYE,aAAaS,QAAQ,YACjCC,EAAa,GACA,OAAdZ,GACDY,EAAaR,KAAKS,MAAMb,IACbc,KAAKrF,GAGhBmF,EAAWE,KAAKrF,GAGlByE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUO,IAChDvF,KAAKiC,SAAS,CACZoC,MAAOkB,M,mCAKTH,QAAQC,IAAI,sBACZrF,KAAKiC,SAAS,CACZI,aAAa,M,0CAIG,IAAD,OACXsC,EAAYE,aAAaS,QAAQ,YAEnCjB,EAAQ,GACZ,GAAiB,OAAdM,EAAmB,CAClB,IAAMe,EAAYX,KAAKS,MAAMb,GACzBgB,EAAY,EAChBtB,EAAQqB,EAAUvF,KAAI,SAAAC,GAIpB,OAHAA,EAAKE,GAAKqF,EACVA,GAAwB,EACxB,EAAK1D,SAAS,CAACqC,UAAWqB,IACnBvF,KAIbJ,KAAKiC,SAAS,CAACoC,MAAOA,M,+BAId,IAOFa,EAPC,OACDnB,EAAgB,EAChBC,EAAiB,EACjB5C,EAAa,EACb6C,EAAuB,EACvBC,EAAiB,EACjBC,EAAmB,EAEnByB,EAAgB5F,KAAK2B,MAAM0C,MAsD/B,OApDqB,OAAlBuB,GAECV,EADuB,QAAxBlF,KAAK2B,MAAM2B,SACF,GAGC,EAKbsC,EAAgBA,EAAcC,MAAK,SAACC,EAAGC,GAEnC,OAA6B,OAA1BD,EAAE,EAAKnE,MAAMyB,eAA+C4C,IAA1BF,EAAE,EAAKnE,MAAMyB,SAC3C,EAGsB,OAA1B2C,EAAE,EAAKpE,MAAMyB,eAA+C4C,IAA1BD,EAAE,EAAKpE,MAAMyB,SAC3C,EAGJ0C,EAAE,EAAKnE,MAAMyB,SAAS6C,cAAiBF,EAAE,EAAKpE,MAAMyB,SAAS6C,eACxD,EAAIf,EAGL,EAAIA,KAEZgB,QAAO,SAAAC,GACN,YACyBH,IAAzBG,EAAQ,UAA8BA,EAAQ,SAAaF,cAC1DG,SAAS,EAAKzE,MAAM4C,UAAU0B,qBACRD,IAAvBG,EAAQ,QAA4BA,EAAQ,OAAWF,cAAcG,SAAS,EAAKzE,MAAM4C,UAAU0B,mBAKnGL,EAAgB,GAGjB5F,KAAK2B,MAAM0C,MAAMgC,QAAUT,EAAcS,QACxCT,EAAcU,SAAQ,SAAAlG,GAClB2D,GAAiBwC,WAAWnG,EAAKc,UACjC8C,GAAkBuC,WAAWnG,EAAKe,WAClCC,GAAcmF,WAAWnG,EAAKgB,YAC9B6C,GAAwBsC,WAAWnG,EAAKiB,iBACxC6C,GAAkBqC,WAAWnG,EAAKkB,WAClC6C,GAAoBoC,WAAWnG,EAAKmB,gBAQxC,0BAAMxB,UAAU,gBAAgBO,GAAG,cAC/B,yBAAKP,UAAU,aACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAWuC,WAAYtC,KAAKsC,WAAYD,YAAarC,KAAK2B,MAAMU,YAAaF,QAASnC,KAAKmC,UAC3F,kBAAC,EAAD,CAAciB,QAASpD,KAAK2B,MAAMyB,QAASE,SAAYtD,KAAK2B,MAAM2B,SAAUD,YAAarD,KAAKqD,YAAaL,YAAehD,KAAKwE,aAC/H,kBAAC,EAAD,CAAatE,QAAS0F,EAAe/E,WAAcb,KAAKa,WAAYL,WAAcR,KAAKQ,aACvF,kBAAC,EAAD,CAAOuD,cAAeA,EAAeC,eAAgBA,EAAgB5C,WAAYA,EAAY6C,qBAAsBA,EAAsBC,eAAgBA,EAAgBC,iBAAkBA,a,GAvLjLxE,aC2BnB6G,E,YAzBb,aAAc,uE,sEAKZ,OACE,0BAAMzG,UAAU,gBAAgBO,GAAG,cACjC,yBAAKP,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,aACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjC,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,UAAUC,UAAWjH,IACvC,kBAAC,IAAD,CAAOiH,UAAW/G,c,GAhBlBD,aCIEiH,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2D,kBCNNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OACMC,SAASC,eAAe,SDkHhC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.66506f26.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Report extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Error() {\r\n    return (\r\n        <div>\r\n            <h1>An error has occured</h1>\r\n            <Link to=\"/\">\r\n                Return Home\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\n\r\nexport default class ListCFItems extends Component {\r\n    constructor(){\r\n        super()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"appointment-list item-list mb-3\">                \r\n                {this.props.cfItems.map(item => (\r\n                    <div className=\"pet-item col media py-3\" key={item.id}>\r\n                    <div className=\"mr-3\">\r\n                      <button className=\"pet-delete btn btn-sm btn-danger\" onClick={()=> this.props.deleteItem(item)}>\r\n                          <FaTimes />\r\n                      </button>\r\n                    </div>\r\n        \r\n                    <div className=\"pet-info media-body\">\r\n                      <div className=\"pet-head d-flex\">\r\n                        <span className=\"pet-name\" contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('caseNo', e.target.innerText, item.id)}>{item.caseNo}</span>                        \r\n                        \r\n\r\n                      </div>\r\n        \r\n                      <div className=\"owner-name\">\r\n                        <span className=\"label-item\">Part No: </span>\r\n                        <span  contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('partNo', e.target.innerText, item.id)}>{item.partNo}</span>                        \r\n\r\n                        <br></br>\r\n                        <span className=\"label-item\">Quantity: </span>\r\n                        <span contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('hsCode', e.target.innerText, item.id)}>{item.quantity}</span>\r\n\r\n                        \r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <span className=\"label-item\">Unit Price: </span>\r\n                        <span contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('unitPrice', e.target.innerText, item.id)}>{item.unitPrice}</span>\r\n\r\n                        \r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <span className=\"label-item\">Total Price: </span>\r\n                        <span contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('totalPrice', e.target.innerText, item.id)}>{item.totalPrice}</span>\r\n\r\n                        \r\n                        <br></br>\r\n                        <span className=\"apt-notes\">Net Weight Per Pcs: </span>\r\n                        <span className=\"apt-notes\" contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('netWeightPerPcs', e.target.innerText, item.id)}>                            \r\n                            {item.netWeightPerPcs}\r\n                        </span>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <span className=\"apt-notes\">Net Weight: </span>\r\n                        <span className=\"apt-notes\" contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('netWeight', e.target.innerText, item.netWeight)}>                            \r\n                            {item.netWeight}\r\n                        </span>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <span className=\"apt-notes\">Gross Weight: </span>\r\n                        <span className=\"apt-notes\" contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('grossWeight', e.target.innerText, item.netWeight)}>                            \r\n                            {item.grossWeight}\r\n                        </span>\r\n\r\n                      </div>     \r\n                      <div>\r\n                        <span className=\"label-item\">Part Name: </span>\r\n                        <span contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('partName', e.target.innerText, item.id)}>                            \r\n                            {item.partName}\r\n                        </span>\r\n                      </div>      \r\n                      <div>\r\n                        <span className=\"label-item\">HS Code: </span>\r\n                        <span contentEditable suppressContentEditableWarning onBlur={e => this.props.updateInfo('hsCode', e.target.innerText, item.id)}>                            \r\n                            {item.hsCode}\r\n                        </span>\r\n                      </div>       \r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {FaPlus} from 'react-icons/fa';\r\n\r\nexport default class AddCFItem extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            caseNo: 0,\r\n            partNo: '',\r\n            partName: '',\r\n            hsCode: '',\r\n            quantity: 0,\r\n            unitPrice: 0,\r\n            totalPrice: 0,\r\n            netWeightPerPcs: 0,\r\n            netWeight: 0,\r\n            grossWeight: 0\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n\r\n    handleChange(e){\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleAdd(e){\r\n        e.preventDefault();\r\n\r\n        if(this.state.caseNo === 0){\r\n            alert(\"Case no cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.partNo === ''){\r\n            alert(\"Part no cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.partName === ''){\r\n            alert(\"Part name cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.hsCode === ''){\r\n            alert(\"HS Code cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.quantity === 0){\r\n            alert(\"Quantity cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.unitPrice === 0){\r\n            alert(\"Unit Price cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.totalPrice === 0){\r\n            alert(\"Total Price cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.netWeightPerPcs === 0){\r\n            alert(\"Net Weight Per Pcs cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.netWeight === 0){\r\n            alert(\"Net Weight cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        if(this.state.grossWeight === 0){\r\n            alert(\"Gross Weight cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        let item = {\r\n            caseNo: this.state.caseNo,\r\n            partNo: this.state.partNo,\r\n            partName: this.state.partName,\r\n            hsCode: this.state.hsCode,\r\n            quantity: this.state.quantity,\r\n            unitPrice: this.state.unitPrice,\r\n            totalPrice: this.state.totalPrice,\r\n            netWeightPerPcs: this.state.netWeightPerPcs,\r\n            netWeight: this.state.netWeight,\r\n            grossWeight: this.state.grossWeight\r\n        };\r\n\r\n        this.props.addItem(item);\r\n        this.setState({\r\n            caseNo: 0,\r\n            partNo: '',\r\n            partName: '',\r\n            hsCode: '',\r\n            quantity: 0,\r\n            unitPrice: 0,\r\n            totalPrice: 0,\r\n            netWeightPerPcs: 0,\r\n            netWeight: 0,\r\n            grossWeight: 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'card textcenter mt-3 ' + (this.props.formDisplay === false ? '' : 'add-appointment')} \r\n              onClick={this.props.toggleForm}>\r\n                <div className=\"apt-addheading card-header bg-primary text-white\">\r\n                    <FaPlus /> Add Product\r\n                </div>\r\n  \r\n                <div className=\"card-body\">\r\n              <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"caseNo\"\r\n                    readOnly\r\n                  >\r\n                    Case No\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"caseNo\"\r\n                      placeholder=\"Case No\"\r\n                      value={this.state.caseNo}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"partNo\"\r\n                    readOnly\r\n                  >\r\n                    Part No\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"partNo\"\r\n                      placeholder=\"Part No\"\r\n                      value={this.state.partNo}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>   \r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"partName\"\r\n                    readOnly\r\n                  >\r\n                    Part Name\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"partName\"\r\n                      placeholder=\"Part Name\"\r\n                      value={this.state.partName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>             \r\n  \r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"hsCode\"\r\n                  >\r\n                   HS Code\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"hsCode\"\r\n                      placeholder=\"HS Code\"\r\n                      value={this.state.hsCode}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"quantity\"\r\n                  >\r\n                    Quantity\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"quantity\"\r\n                      placeholder=\"Quantity\"\r\n                      value={this.state.quantity}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"unitPrice\"\r\n                  >\r\n                    Unit Price\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"unitPrice\"\r\n                      placeholder=\"Unit Price\"\r\n                      value={this.state.unitPrice}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"totalPrice\"\r\n                  >\r\n                    Total Price\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"totalPrice\"\r\n                      placeholder=\"Total Price\"\r\n                      value={this.state.totalPrice}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"netWeightPerPcs\"\r\n                  >\r\n                    Net Weight Per Pcs\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"netWeightPerPcs\"\r\n                      placeholder=\"Net Weight Per Pcs\"\r\n                      value={this.state.netWeightPerPcs}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"netWeight\"\r\n                  >\r\n                    Net Weight\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"netWeight\"\r\n                      placeholder=\"Net Weight\"\r\n                      value={this.state.netWeight}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"grossWeight\"\r\n                  >\r\n                    Gross Weight\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"grossWeight\"\r\n                      placeholder=\"Gross Weight\"\r\n                      value={this.state.grossWeight}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-row mb-0\">\r\n                  <div className=\"offset-md-2 col-md-10\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary d-block ml-auto\"\r\n                    >\r\n                      Add Product\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SearchCFItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"search-appointments row justify-content-center my-4\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  id=\"SearchItems\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Search Products\" onChange={e => this.props.searchItems(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary dropdown-toggle\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Sort by: <span className=\"caret\" />\r\n                  </button>\r\n    \r\n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={\r\n                        'sort-by dropdown-item ' + \r\n                        (this.props.orderBy === 'partName' ? 'active' : '')\r\n                    } onClick={e=> this.props.changeOrder('partName', this.props.orderDir)} href=\"#\">\r\n                      Part Name\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' + \r\n                        (this.props.orderBy === 'hsCode' ? 'active' : '')\r\n                    } onClick={e=> this.props.changeOrder('hsCode', this.props.orderDir)} href=\"#\">\r\n                      HS Code\r\n                    </button>                    \r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={\r\n                        'sort-by dropdown-item ' + \r\n                        (this.props.orderDir === 'asc' ? 'active' : '')\r\n                    } onClick={e=> this.props.changeOrder(this.props.orderBy, 'asc')} href=\"#\">\r\n                      Asc\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' + \r\n                        (this.props.orderDir === 'desc' ? 'active' : '')\r\n                    } onClick={e=> this.props.changeOrder(this.props.orderBy, 'desc')} href=\"#\">\r\n                      Desc\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Total extends Component {\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <table border=\"1\" style={{margin: 10}}>\r\n                   <thead>\r\n                       <tr style={{background: 'cyan'}}>\r\n                           <td>Total Quantity</td>\r\n                           <td>Total Unit Price</td>\r\n                           <td>Total Price</td>\r\n                           <td>Total Net Weight Per Pecs</td>\r\n                           <td>Total Net Weight</td>\r\n                           <td>Total Gross Weight</td>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                        <tr style={{fontWeight: 'bold'}}>\r\n                            <td>{this.props.totalQuantity}</td>\r\n                            <td>{this.props.totalUnitPrice}</td>\r\n                            <td>{this.props.totalPrice}</td>\r\n                            <td>{this.props.totalNetWeightPerPcs}</td>\r\n                            <td>{this.props.totalNetWeight}</td>\r\n                            <td>{this.props.totalGrossWeight}</td>\r\n                        </tr>\r\n                   </tbody>\r\n               </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ListCFItems from '../components/ListCFItems';\r\nimport AddCFItem from '../components/AddCFItem';\r\nimport SearchCFItem from '../components/SearchCFItem';\r\nimport Total from '../components/Total'\r\n\r\nimport {without, findIndex} from 'lodash';\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            items: [],\r\n            lastIndex: 0,\r\n            formDisplay: true,\r\n            orderBy: 'partName',\r\n            orderDir: 'asc',\r\n            queryText: ''\r\n          }\r\n      \r\n          this.toggleForm = this.toggleForm.bind(this);\r\n          this.addItem = this.addItem.bind(this);\r\n          this.changeOrder = this.changeOrder.bind(this);\r\n          this.searchItem = this.searchItem.bind(this);\r\n          this.updateInfo = this.updateInfo.bind(this);\r\n          this.deleteItem = this.deleteItem.bind(this);\r\n    }\r\n\r\n    deleteItem(item){\r\n        var confirmed = window.confirm(\"Are you sure to delete this product?\");\r\n        if(confirmed === false){\r\n          return;\r\n        }\r\n        let tempItems = this.state.items;\r\n        tempItems = without(tempItems, item);\r\n        this.setState({\r\n          items: tempItems\r\n        });\r\n  \r\n        localStorage.setItem('cf-items', JSON.stringify(tempItems));\r\n    }    \r\n  \r\n    updateInfo(name, value, id){\r\n      let tempItems = this.state.items;    \r\n      \r\n      if(tempItems !== null){\r\n        let itemIndex = findIndex(tempItems, {\r\n          id: id\r\n        });\r\n        tempItems[itemIndex][name] = value;\r\n  \r\n        localStorage.setItem('cf-items', JSON.stringify(tempItems));\r\n  \r\n        this.setState({\r\n          items: tempItems\r\n        });\r\n      }\r\n      \r\n  \r\n      \r\n    }\r\n  \r\n    changeOrder(order, dir){\r\n      this.setState({\r\n        orderBy: order,\r\n        orderDir: dir\r\n      });\r\n    }\r\n  \r\n    searchItem(value){\r\n      this.setState({\r\n        queryText: value\r\n      });\r\n    }\r\n  \r\n    addItem(item){\r\n      console.log(item);\r\n      let tempItems = localStorage.getItem('cf-items');\r\n      let tempItems2 = [];\r\n      if(tempItems !== null){\r\n        tempItems2 = JSON.parse(tempItems);\r\n        tempItems2.push(item);\r\n      }\r\n      else{\r\n        tempItems2.push(item);\r\n      }\r\n  \r\n      localStorage.setItem('cf-items', JSON.stringify(tempItems2));\r\n      this.setState({\r\n        items: tempItems2\r\n      });\r\n    }\r\n  \r\n    toggleForm(){\r\n      console.log('toggle form called');\r\n      this.setState({\r\n        formDisplay: false\r\n      })\r\n    }\r\n  \r\n    componentDidMount(){\r\n      const tempItems = localStorage.getItem('cf-items');\r\n  \r\n      let items = [];\r\n      if(tempItems !== null){\r\n          const tempItem2 = JSON.parse(tempItems);\r\n          let nextIndex = 0;\r\n          items = tempItem2.map(item => {\r\n            item.id = nextIndex;\r\n            nextIndex = nextIndex + 1\r\n            this.setState({lastIndex: nextIndex});\r\n            return item;\r\n        });\r\n      }\r\n  \r\n      this.setState({items: items});\r\n      \r\n    }\r\n\r\n    render() {\r\n        let totalQuantity = 0;\r\n        let totalUnitPrice = 0;\r\n        let totalPrice = 0;\r\n        let totalNetWeightPerPcs = 0;\r\n        let totalNetWeight = 0;\r\n        let totalGrossWeight = 0;\r\n        let order;\r\n        let filteredItems = this.state.items;\r\n\r\n        if(filteredItems !== null){\r\n        if(this.state.orderDir === 'asc'){\r\n            order = 1;\r\n        }\r\n        else{\r\n            order = -1;\r\n        }\r\n\r\n        \r\n    \r\n        filteredItems = filteredItems.sort((a, b) => {\r\n\r\n            if(a[this.state.orderBy] === null || a[this.state.orderBy] === undefined){\r\n            return 1;\r\n            }\r\n\r\n            if(b[this.state.orderBy] === null || b[this.state.orderBy] === undefined){\r\n            return 1;\r\n            }\r\n\r\n            if(a[this.state.orderBy].toLowerCase() <  b[this.state.orderBy].toLowerCase()){\r\n            return -1 * order;\r\n            }\r\n            else{\r\n            return 1 * order;\r\n            }\r\n        }).filter(eachItem => {\r\n            return (\r\n            eachItem['partName'] !== undefined && eachItem['partName'].toLowerCase()\r\n            .includes(this.state.queryText.toLowerCase()) ||\r\n            eachItem['hsCode'] !== undefined && eachItem['hsCode'].toLowerCase().includes(this.state.queryText.toLowerCase())\r\n            );\r\n        });\r\n        }\r\n        else{\r\n            filteredItems = [];\r\n        }\r\n\r\n        if(this.state.items.length != filteredItems.length){\r\n            filteredItems.forEach(item => {\r\n                totalQuantity += parseFloat(item.quantity);\r\n                totalUnitPrice += parseFloat(item.unitPrice);\r\n                totalPrice += parseFloat(item.totalPrice);\r\n                totalNetWeightPerPcs += parseFloat(item.netWeightPerPcs);\r\n                totalNetWeight += parseFloat(item.netWeight);\r\n                totalGrossWeight += parseFloat(item.grossWeight);\r\n    \r\n            });\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n            <main className=\"page bg-white\" id=\"petratings\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 bg-white\">\r\n                    <div className=\"container\">      \r\n                        <AddCFItem toggleForm={this.toggleForm} formDisplay={this.state.formDisplay} addItem={this.addItem}></AddCFItem>\r\n                        <SearchCFItem orderBy={this.state.orderBy} orderDir = {this.state.orderDir} changeOrder={this.changeOrder} searchItems = {this.searchItem}></SearchCFItem>\r\n                        <ListCFItems cfItems={filteredItems} updateInfo = {this.updateInfo} deleteItem = {this.deleteItem}></ListCFItems>\r\n                        <Total totalQuantity={totalQuantity} totalUnitPrice={totalUnitPrice} totalPrice={totalPrice} totalNetWeightPerPcs={totalNetWeightPerPcs} totalNetWeight={totalNetWeight} totalGrossWeight={totalGrossWeight}></Total>\r\n                    </div>  \r\n                    </div> \r\n                </div>\r\n                </div>\r\n        </main>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport '../css/App.css';\r\n\r\nimport {Switch, Route, Link} from 'react-router-dom';\r\nimport Report from '../pages/Report';\r\nimport Error from '../pages/Error';\r\nimport Home from '../pages/Home';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(){\r\n    super();    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <main className=\"page bg-white\" id=\"petratings\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 bg-white\">\r\n              <div className=\"container\">                    \r\n              <Switch>      \r\n                  <Route exact path='/' component={Home}></Route>\r\n                  <Route exact path='/report' component={Report}></Route>                     \r\n                  <Route component={Error}></Route> \r\n              </Switch>                            \r\n              </div>  \r\n            </div> \r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Route} from 'react-router-dom';\r\n\r\nimport 'jquery/dist/jquery';\r\nimport 'popper.js/dist/umd/popper';\r\nimport 'bootstrap/dist/js/bootstrap';\r\n\r\nReactDOM.render(\r\n    <Route>\r\n        <App />\r\n    </Route>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}